TODO:
- add function to read input and call functions accordingly, based on the data structure that is currently shown
- add canvas backend for the rest of the data structures:
	- binary search tree (canvas: need to use log(2) to determine y offset and radius)
	- heap (max-heap) tree (same as bst)
	- hashmap (TBD, more complicated, do this last)
	- graphs



- for animating trees, could add arrows showing where they went, or could try to do actual animations
	- inspo (look at heap animation): https://www.cs.usfca.edu/~galles/visualization/Algorithms.html

- encapsulate this, don't allow user to edit data structures
- go through and re-comment it, only add comments when complex stuff is happening (GREAT LINK: https://blog.codinghorror.com/coding-without-comments/)
- at the end of drawing, remove rectangle from top corner
- add actual style, make pretty 

___________________________________________________________________

- turn deleting from array to splicing from array, update all instances where this matters
- add scale_x and scale_y to all drawings
